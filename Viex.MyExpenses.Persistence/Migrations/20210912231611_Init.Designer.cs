// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Viex.MyExpenses.Persistence;

namespace Viex.MyExpenses.Persistence.Migrations
{
    [DbContext(typeof(MyExpensesContext))]
    [Migration("20210912231611_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.RoleDescriptors.RoleDescriptor", b =>
                {
                    b.Property<int>("RoleDescriptorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleDescriptorId");

                    b.ToTable("RoleDescriptors");
                });

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.TransactionCategoryDescriptors.TransactionCategoryDescriptor", b =>
                {
                    b.Property<int>("TransactionCategoryDescriptorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionTypeDescriptorId")
                        .HasColumnType("int");

                    b.HasKey("TransactionCategoryDescriptorId");

                    b.HasIndex("TransactionTypeDescriptorId");

                    b.ToTable("TransactionCategoryDescriptors");
                });

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.TransactionEntries.TransactionEntry", b =>
                {
                    b.Property<long>("TransactionEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionCategoryDescriptorId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionCategoryDescriptorOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransactionSubCategoryDescriptorId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionSubCategoryDescriptorOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TransactionEntryId");

                    b.HasIndex("TransactionCategoryDescriptorId");

                    b.HasIndex("TransactionSubCategoryDescriptorId");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionEntries");
                });

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.TransactionSubCategoryDescriptors.TransactionSubCategoryDescriptor", b =>
                {
                    b.Property<int>("TransactionSubCategoryDescriptorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionCategoryDescriptorId")
                        .HasColumnType("int");

                    b.HasKey("TransactionSubCategoryDescriptorId");

                    b.HasIndex("TransactionCategoryDescriptorId");

                    b.ToTable("TransactionSubCategoryDescriptors");
                });

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.TransactionTypeDescriptors.TransactionTypeDescriptor", b =>
                {
                    b.Property<int>("TransactionTypeDescriptorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionTypeDescriptorId");

                    b.ToTable("TransactionTypeDescriptors");
                });

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.Users.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleDescriptorId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleDescriptorId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.TransactionCategoryDescriptors.TransactionCategoryDescriptor", b =>
                {
                    b.HasOne("Viex.MyExpenses.Persistence.Repositories.TransactionTypeDescriptors.TransactionTypeDescriptor", "TransactionTypeDescriptor")
                        .WithMany()
                        .HasForeignKey("TransactionTypeDescriptorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransactionTypeDescriptor");
                });

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.TransactionEntries.TransactionEntry", b =>
                {
                    b.HasOne("Viex.MyExpenses.Persistence.Repositories.TransactionCategoryDescriptors.TransactionCategoryDescriptor", "TransactionCategoryDescriptor")
                        .WithMany()
                        .HasForeignKey("TransactionCategoryDescriptorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Viex.MyExpenses.Persistence.Repositories.TransactionSubCategoryDescriptors.TransactionSubCategoryDescriptor", "TransactionSubCategoryDescriptor")
                        .WithMany()
                        .HasForeignKey("TransactionSubCategoryDescriptorId");

                    b.HasOne("Viex.MyExpenses.Persistence.Repositories.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransactionCategoryDescriptor");

                    b.Navigation("TransactionSubCategoryDescriptor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.TransactionSubCategoryDescriptors.TransactionSubCategoryDescriptor", b =>
                {
                    b.HasOne("Viex.MyExpenses.Persistence.Repositories.TransactionCategoryDescriptors.TransactionCategoryDescriptor", "TransactionCategoryDescriptor")
                        .WithMany()
                        .HasForeignKey("TransactionCategoryDescriptorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransactionCategoryDescriptor");
                });

            modelBuilder.Entity("Viex.MyExpenses.Persistence.Repositories.Users.User", b =>
                {
                    b.HasOne("Viex.MyExpenses.Persistence.Repositories.RoleDescriptors.RoleDescriptor", "RoleDescriptor")
                        .WithMany()
                        .HasForeignKey("RoleDescriptorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleDescriptor");
                });
#pragma warning restore 612, 618
        }
    }
}
